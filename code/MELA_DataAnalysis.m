%% ACHE_DataAnalysis
% Analysis code for the Penn Online Evaluation of Migraine (POEM)
%
% Description:
%   This routine loads the .csv files generated by Qualtrics that have the
%   results of the migraine diagnostic pathway. The link the data for the
%   Aguirre lab can be found here:
%
%       https://upenn.co1.qualtrics.com/jfe/form/SV_4NQzKbssiT8qqVf
%
%   Subsequent functions called from this main script are responsible for
%   pre-processing of the data fields and then implementing the headache
%   classification pathway.
%

%% Housekeeping
clear variables
close all

%% Set paths to data and output
projectDir=getpref('Kaiser_2018_Cephalalgia', 'projectDir');
outputDir = '~/Desktop/Kaiser_2018_Cephalalgia_results/';

% If the output directory does not exist, create it
if ~exist(outputDir,'dir')
    mkdir(outputDir)
end

% Set filenames
qualtricsDataFile = fullfile(projectDir,'data','POEM_v1.0_MELA_and_ACHE_de-identified.csv');
outputResultExcelName=fullfile(outputDir, 'MELA_POEM_results.xlsx');


%% load and pre-process thisDataSheet, returning table "T"
[T, notesText] = poemAnalysis_preProcess(qualtricsDataFile);


%% classify headache based upon table T
diagnosisTable = poemAnalysis_classify( T );
writetable(diagnosisTable,outputResultExcelName,'Range','A4','WriteRowNames',true)



%% create a confusion matrix for the MELA subjects

% load the study neurologist diagnoses
goldStandardFile = 'MELA-studyID+diagosis.csv';
goldStandardFileFullPath = fullfile(projectDir,'data', goldStandardFile);
goldStandardDiagnosis = readtable(goldStandardFileFullPath);

% This is the order of columns in the confusion matrix. Note that we are
% not including the Migraine with other aura here.
reOrderedPoemDiagnosisLabels = {'HeadacheFree','MildNonMigrainousHeadache','HeadacheNOS','MigraineWithoutAura','MigraineWithVisualAura','MigraineWithOtherAura'};

confusionMatrix = zeros(5,5);
% loop through the subjects in the diagnosisTable
for ss = 1:size(diagnosisTable,1)
    % get this subject's studyID
    studyID = diagnosisTable.Row{ss};
    % see if there is an entry in the gold standard table
    matchIdx = find(cellfun(@(x) strcmp(studyID,x), goldStandardDiagnosis.SubjectID));
    % assign a confuion matrix row based upon the gold standard diagnosis
    if ~isempty(matchIdx)
        switch goldStandardDiagnosis.Diagnosis{matchIdx}
            case ''
                rowIdx = [];
            case 'Headache free'
                rowIdx = 1;
            case 'Mild non-migrainous headache'
                rowIdx = 2;
            case 'Headache NOS'
                rowIdx = 3;
            case 'Migraine without aura'
                rowIdx = 4;
            case 'Migraine with visual aura'
                rowIdx = 5;
            otherwise
                error('I encountered an undefined gold standard diagnosis');
        end
        % Identify which poem diagnosis was assigned to this subject
        initialColumnIdx = find(table2array(diagnosisTable(ss,1:6)),1);
        % Find which column this diagnosis will be placed within
        columnIdx = find( strcmp(reOrderedPoemDiagnosisLabels, diagnosisTable.Properties.VariableNames{initialColumnIdx}) ); 
        % A HACK -- if either migraine with visual or migraine with other
        % aura is true, then put a value in for the migraine with any aura
        % column
        if columnIdx==5 || columnIdx==6
            columnIdx=5;
        end
        if ~isempty(rowIdx)
            confusionMatrix(rowIdx,columnIdx) = confusionMatrix(rowIdx,columnIdx) + 1;
        end
    end
end

% print out the confusion matrix
outline='\t';
for dd = 1:5
    outline = [outline '\t' outputPoemDiagnosisLabels{dd} '\t'];
end
fprintf([outline '\n']);
goldStandardDiagnoses = {'Headache free\t\t','Mild non-migrainous headache','Headache NOS\t\t','Migraine without aura\t','Migraine with visual aura'};
for rr = 1:5
    outline = [goldStandardDiagnoses{rr} '\t'];
    for cc = 1:5
        outline = [outline num2str(confusionMatrix(rr,cc)) '\t\t'];
    end
fprintf([outline '\n']);
end

